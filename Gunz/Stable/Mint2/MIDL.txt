
○ http://iworks.maietgames.com/mdn/wiki.php/MIDLManual 로 이동되었습니다.

= MIDL(Maiet Interface Definition Language) Manual =
 * 최근 업데이트 : 4월 28일

== 개요 ==
MIDL은 게임에서 쓰이는 인터페이스를 정의하기 위한 일종의 규약이다. MIDL은 XML 포맷을 사용한다. 
이 문서는 MIDL을 사용하여 Gunz Online의 인터페이스를 구성하는 방법을 설명하는 MIDL 매뉴얼이다.
 
== 기본적인 제작 방법 ==
 * 프로그램은 폴더 단위로 하나의 인터페이스셋(스킨)을 인식한다. 
   스킨은 게임이 설치된 폴더의 Interface폴더밑에 있다.
   따라서 스킨을 새로 하나 만들기 위해서는 Interface 폴더에서 하위폴더를 생성하면 된다. 
   Gunz Online에서 쓰이는 기본 스킨은 Default이다.

 * 스킨을 변경하기 위해서는 콘솔에서 "ChangeSkin 스킨이름" 을 입력하거나 
   채팅창에서 "/ChangeSkin 스킨이름"을 입력하면 된다. 예) /ChangeSkin Bird

 * main.xml
   프로그램은 해당스킨폴더의 main.xml만을 인식한다. 따라서 스킨폴더의 모든 xml파일을 인식하도록
   하기 위해서는 main.xml에서 <INCLUDE>태그를 사용하여 다른 xml파일도 읽을 수 있도록 한다.
   자세한 사용예는 Default스킨의 main.xml을 참고하도록 한다.

 * item
   모든 위젯들은 Attribute로 item값을 가지고 있고, 게임은 item값으로 해당 위젯의 역할을 판단한다.
   아직 item에 대한 자세한 매뉴얼이 없으므로 게임에서 기본으로 쓰이고 있는 Default스킨을 참고하여 
   스킨을 제작하도록 한다.
   
 * MIDL 공통 규칙 
   - 모든 태그 이름은 대문자로 기술한다. 예) <BUTTON> , <SCROLLBAR>
   - 모든 attribute 이름은 소문자로 기술한다. 예) <LABEL item="SampleLabel" parent="SampleFrame">
 
== Element 설명 ==
* 파라메타 리스트 순서 : (Parameter or Attribute) 이름 | 타입 | 기본값 | 설명

○ INCLUDE
* 설명 : 다른 xml문서를 포함한다.
* 사용예
<INCLUDE>ChatFrame.xml</INCLUDE>
 
 
○ Point(타입)
* 설명 : x, y 좌표값을 나타낸다.

* Parameter
   X | int | 0 | X값
   Y | int | 0 | Y값
   
* 사용예
<POINT>
	<X>100</X>
	<Y>100</Y>
</POINT>

   
○ Rect(타입)
* 설명 : 직사각형, 만약 X, Y가 음수이면 좌측 또는 하단으로 얼라인된다.

* Parameter
	X | int | 0 | X 좌표
	Y | int | 0 | Y 좌표
	W | int | 0 | 넓이
	H | int | 0 | 높이
  
* 사용예
<RECT>
	<X>100</X>
	<Y>100</Y>
	<W>200</W>
	<H>300</H>
</RECT>


○ Size(타입)
* 설명 : Size

* Parameter
	W | int | 0 | 넓이
	H | int | 0 | 높이
 
* 사용예
<SIZE>
	<W>100</W>
	<H>100</H>
</SIZE>
 
○ Color(타입)
* 설명 : Color

* Parameter
	R	  | int | 255 | Red 값, 0 ~ 255
	G	  | int | 255 | Green 값, 0 ~ 255
	B	  | int | 255 | Blue 값, 0 ~ 255
	ALPHA | int | 255 | Alpha 값, 0 ~ 255

* 사용예
<COLOR>
	<R>190</R>
	<G>190</G>
	<B>190</B>
</COLOR>

○ Anchors(타입)
* 설명 : 부모위젯과의 위치 관계를 나타낸다. 
         예를들어 RIGHT값이 true이면 부모 위젯 크기가 오른쪽으로 늘어나면 함께 늘어난다.

* Parameter
	LEFT   | bool | true  | left anchor
	TOP    | bool | true  | top anchor
	RIGHT  | bool | false | right anchor
	BOTTOM | bool | false | bottom anchor

* 사용예
<ANCHORS>
	<LEFT>true</LEFT>
	<TOP>true</TOP>
	<RIGHT>false</RIGHT>
	<BOTTOM>false</BOTTOM>
</ANCHORS>
 
 
 
○ Class(실제로 사용하지 않는다. = Abstract)
* 설명 : 

* Attribute
	item | string |   | 엘리먼트의 사용요소 ID 
	
* Parameter


○ Widget(Abstract) < Class 
   ( < 의 의미는 Widget은 Class의 Parameter, Attribute를 상속받아 사용할 수 있다는 의미이다.)
* 설명 : 모든 위젯의 기본 클래스

* Attribute
	parent  | string  |   | 부모 위젯의 item
	
* Parameter
	BOUNDS  | Rect	  |   | 위젯의 사이즈와 위치를 정의
	TEXT    | string  |   | 위젯의 이름
	ANCHORS | Anchors |   | 부모위젯과의 위치 관계
	TOOLTIP | string  |   | 툴팁 텍스트
	VISIBLE | bool	  |   | 보이는지 안보이는지 여부
	ENABLE	| bool	  |   | 사용가능/불가능 여부
 
 
○ Frame < Widget
* 설명 : 윈도우즈에서 하나의 윈도우와 비슷한 개념으로 생각하면 된다.

* Parameter
	FRAMELOOK		| string	|	| 프레임룩에 대한 레퍼런스 item
	CLOSE_BUTTON	|			|	| Close버튼의 위치
	MINIMIZE_BUTTON	|			|	| Minimize버튼의 위치
	
* 사용예
<FRAME item="SampleFrame">
	<FRAMELOOK>SampleFrameLook</FRAMELOOK> 
	<BOUNDS>
		<X>10</X> 
		<Y>40</Y> 
		<W>200</W> 
		<H>200</H> 
	</BOUNDS>
	<TEXT>Sample Frame</TEXT> 
		<CLOSE_BUTTON>
			<ANCHORS>
				<LEFT>false</LEFT>
				<TOP>true</TOP>
				<RIGHT>true</RIGHT>
				<BOTTOM>false</BOTTOM>
			</ANCHORS>
			<BOUNDS>
				<X>285</X>
				<Y>2</Y>
				<W>11</W>
				<H>11</H>
			</BOUNDS>			
		</CLOSE_BUTTON>
		<MINIMIZE_BUTTON>
			<ANCHORS>
				<LEFT>false</LEFT>
				<TOP>true</TOP>
				<RIGHT>true</RIGHT>
				<BOTTOM>false</BOTTOM>
			</ANCHORS>
			<BOUNDS>
				<X>270</X>
				<Y>2</Y>
				<W>11</W>
				<H>11</H>
			</BOUNDS>			
		</MINIMIZE_BUTTON>
</FRAME>

  
○ Label < Widget
* 설명 :

* Attribute

* Parameter
	TEXTCOLOR | Color |  |  텍스트 색깔
 
* Example
<LABEL item="SampleLabel" parent="SampleFrame">
	<BOUNDS>
		<X>10</X> 
		<Y>50</Y> 
		<W>100</W> 
		<H>20</H> 
	</BOUNDS>
	<TEXT>레이블 테스트</TEXT> 
	<TEXTCOLOR>
		<R>255</R> 
		<G>0</G> 
		<B>0</B> 
	</TEXTCOLOR>
</LABEL>
 
 
○ Button < Widget
* 설명 : 

* Parameter
	TEXTCOLOR | Color |  | 글자색
	PUSHBUTTON	|			버튼타입을 푸쉬타입으로한다
	SETCHECK	|			푸쉬타입의 버튼을 눌러둔다
	CONFIRMMESSAGE	| string	| 확인창 메세지
	CONFIRMLOOK		| string	| 확인창 프레임 룩 설정
	
* Example
<BUTTON item="SampleButton" parent="SampleFrame">
	<ANCHORS>
		<LEFT>true</LEFT> 
		<TOP>true</TOP> 
		<RIGHT>false</RIGHT> 
		<BOTTOM>false</BOTTOM> 
	</ANCHORS>
	<BOUNDS>
		<X>10</X> 
		<Y>80</Y> 
		<W>92</W> 
		<H>22</H> 
	</BOUNDS>
	<TEXT>버튼 테스트</TEXT> 
	<COLOR>
		<R>0</R> 
		<G>0</G> 
		<B>0</B> 
	</COLOR>
	<TEXTCOLOR>
		<R>0</R> 
		<G>0</G> 
		<B>255</B> 
	</TEXTCOLOR>
</BUTTON>


○ Edit < Widget
* 설명 :

* Attribute

* Parameter
	TEXTCOLOR | Color |   | 글자색
	PASSWORD  | true  |   | 패스워드



○ ListBox < Widget
* 설명 :

* Attribute

* Parameter
	TEXTCOLOR | Color |   | 글자색



○ Picture < Widget
* 설명 :

* Attribute

* Parameter


○ ScrollBar < Widget
* 설명 :

* Attribute

* Parameter


○ Slider < ScrollBar
* 설명 :

* Attribute

* Parameter


○ Group < Widget
* 설명 :

* Attribute

* Parameter



○ ComboBox < Widget
* 설명 :

* Attribute

* Parameter
	COMBOBOXLOOK		| string	|	| 콤보박스룩에 대한 레퍼런스 item ( 실제로는 buttonlooktemplete 를 적어준다 )
	COMBOLISTBOXLOOK	| string	|	| 콤보박스눌렀을때 뜨는 리스트박스룩에 대한 레퍼런스 item ( 실제로는 combolistboxlooktemplete 를 적어준다 )
	


○ Cursor
* 설명 :

* Attribute

* Parameter


* Example
<CURSOR item="SampleCursor">
	<BITMAP>cursor.png</BITMAP>
</CURSOR>


○ PopupMenu < Widget
* 설명 : 메뉴를 만든다. 

* Attribute
  type | h,v | v | type="h" 로 설정하면 horizontal, v로 설정하면 vertical로 설정된다.
  
* Parameter
  MENUITEM |	|	|  메뉴 항목을 설정한다. MENUITEM에 대한 설명은 아래에 더 자세하게 설명되어 있다.
  
* 사용예
	<POPUPMENU item="SamplePopup" type="h">
		<BOUNDS>
			<X>0</X>
			<Y>0</Y>
			<W>300</W>
			<H>50</H>
		</BOUNDS>
		<MENUITEM>
			<TEXT>File</TEXT>
			<SUBMENU>
				<MENUITEM>
					<TEXT>New</TEXT>
				</MENUITEM>
				<MENUITEM>
					<TEXT>Quit</TEXT>
				</MENUITEM>
			</SUBMENU>
		</MENUITEM>
		<MENUITEM>
			<TEXT>Edit</TEXT>
		</MENUITEM>
		<MENUITEM>
			<TEXT>Help</TEXT>
			<SUBMENU>
				<MENUITEM>
					<TEXT>About</TEXT>
				</MENUITEM>
			</SUBMENU>
		</MENUITEM>
	</POPUPMENU>


○ MENUITEM
* 설명 : PopupMenu에서 메뉴 항목을 설정한다. 사용방법은 PopupMenu의 Example을 참고한다.
*Parameter
 TEXT		| string |		| 메뉴 항목 이름을 설정한다.
 SUBMENU	|		 |		| 서브 메뉴를 만든다. 서브메뉴는 재귀적으로 MENUITEM을 차일드로 가질 수 있다.



== LookTemplate ==
LookTemplate은 위젯들의 Look을 정의해놓은 템플릿으로 일반적으로 templates.xml에 모두 정의해놓도록 한다.
xml파일에는 위젯의 정의보다 LookTemplate이 먼저 정의되어 있어야 위젯에 해당 Look이 적용된다.

○ ButtonLookTemplate < Class
* 설명 : 버튼의 Look을 정의한다.

* Parameter
	FONT				| string	|		| 폰트셋
	TEXTCOLOR			| Color		|		| Normal상태시 텍스트 글자 색
	TEXTDOWNCOLOR		| Color		|		| Down시 텍스트 글자 색
	UP					| BITMAPS(9)|		| Up상태시 비트맵셋을 정의한다.
	DOWN				| BITMAPS(9)|		| Down상태시 비트맵셋을 정의한다.
	
* UP / DOWN
  버튼의 비트맵을 정의하기위한 핵심적인 파라메터로 <BITMAP>태그의 집합이다.
  버튼 하나의 그림을 정의하기 위해서는 9개의 비트맵이 필요한데 그 이유는 유연한 사이즈를 정의하기 위해서이다.
  <BITMAP>태그에 type Attribute로 0~8까지를 정의할 수있는데 type마다 해당위치의 비트맵을 정의하면 된다.
  type마다의 위치는 다음과 같다.
	+-----+
	|6 7 8|
	|3 4 5|
	|0 1 2|
	+-----+
  좀 더 자세한 사용법은 사용예를 참고하도록 한다. 
	

* 사용예
<BUTTONLOOKTEMPLATE item="SampleButtonLook">
	<FONT>gulim</FONT>
	<TEXTCOLOR>
		<R>0</R>
		<G>241</G>
		<B>241</B>
	</TEXTCOLOR>
	<TEXTDOWNCOLOR>
		<R>255</R>
		<G>0</G>
		<B>0</B>
	</TEXTDOWNCOLOR>
	<UP>
		<BITMAP type="0">button00-0.png</BITMAP>
		<BITMAP type="1">button00-1.png</BITMAP>
		<BITMAP type="2">button00-2.png</BITMAP>
		<BITMAP type="3">button00-3.png</BITMAP>
		<BITMAP type="4">button00-4.png</BITMAP>
		<BITMAP type="5">button00-5.png</BITMAP>
		<BITMAP type="6">button00-6.png</BITMAP>
		<BITMAP type="7">button00-7.png</BITMAP>
		<BITMAP type="8">button00-8.png</BITMAP>
	</UP>
	<DOWN>
		<BITMAP type="0">button00d-0.png</BITMAP>
		<BITMAP type="1">button00d-1.png</BITMAP>
		<BITMAP type="2">button00d-2.png</BITMAP>
		<BITMAP type="3">button00d-3.png</BITMAP>
		<BITMAP type="4">button00d-4.png</BITMAP>
		<BITMAP type="5">button00d-5.png</BITMAP>
		<BITMAP type="6">button00d-6.png</BITMAP>
		<BITMAP type="7">button00d-7.png</BITMAP>
		<BITMAP type="8">button00d-8.png</BITMAP>
	</DOWN>
</BUTTONLOOKTEMPLATE>


○ FrameLookTemplate
* 설명 : 프레임의 Look을 정의

* Parameter
	FONT				| string	|		| 폰트셋
	TEXTCOLOR			| Color		|		| 텍스트 글자 색
	TEXTPOSITION		| Size		|		| 텍스트의 위치
	BITMAPS				| Bitmaps(9)|		| 프레임의 비트맵셋
	CLOSE				| Bitmaps(2)|		| Close버튼의 비트맵셋
	MINIMIZE			| Bitmaps(2)|		| Minimize버튼의 비트맵셋
	STRETCH				| Boolean	|		| 프레임의 4번비트맵(가운데)이 스트레취할지의 여부(false이면 타일처럼 그려진다.)

* 사용예
<FRAMELOOKTEMPLATE item="SampleFrameLook">
	<FONT>gulim</FONT>
	<TEXTCOLOR>
		<R>0</R>
		<G>241</G>
		<B>241</B>
	</TEXTCOLOR>
	<TEXTPOSITION>
		<X>10</X>
		<Y>0</Y>
	</TEXTPOSITION>
	<BITMAPS>
		<BITMAP type="0">frame00-0.png</BITMAP>
		<BITMAP type="1">frame00-1.png</BITMAP>
		<BITMAP type="2">frame00-2.png</BITMAP>
		<BITMAP type="3">frame00-3.png</BITMAP>
		<BITMAP type="4">frame00-4.png</BITMAP>
		<BITMAP type="5">frame00-5.png</BITMAP>
		<BITMAP type="6">frame00-6.png</BITMAP>
		<BITMAP type="7">frame00-7.png</BITMAP>
		<BITMAP type="8">frame00-8.png</BITMAP>
	</BITMAPS>
	<CLOSE>
		<BITMAP type="up">frame00-close.png</BITMAP>
		<BITMAP type="down">frame00-closeclick.png</BITMAP>
	</CLOSE>
	<MINIMIZE>
		<BITMAP type="up">frame00-minimize.png</BITMAP>
		<BITMAP type="down">frame00-closeclick.png</BITMAP>
	</MINIMIZE>
	<STRETCH>true</STRETCH>
</FRAMELOOKTEMPLATE>


○ ListBoxLookTemplate
* 설명 : ListBox의 Look을 정의
* Attribute

* Parameter
	BITMAPS				| Bitmaps(9)|		| 프레임의 비트맵셋
	
* 사용예
<LISTBOXTEMPLATE item="SampleListBoxLook">
	<BITMAPS>
		<BITMAP type="0">listbox00-0.png</BITMAP>
		<BITMAP type="1">listbox00-1.png</BITMAP>
		<BITMAP type="2">listbox00-2.png</BITMAP>
		<BITMAP type="3">listbox00-3.png</BITMAP>
		<BITMAP type="4">listbox00-4.png</BITMAP>
		<BITMAP type="5">listbox00-5.png</BITMAP>
		<BITMAP type="6">listbox00-6.png</BITMAP>
		<BITMAP type="7">listbox00-7.png</BITMAP>
		<BITMAP type="8">listbox00-8.png</BITMAP>
	</BITMAPS>
</LISTBOXTEMPLATE>

○ ArrowLookTemplate
* 설명 : 
* Attribute
* Parameter

○ ThumbLookTemplate
* 설명 :
* Attribute

* Parameter

○ ScrollBarLookTemplate
* 설명 :
* Attribute

* Parameter
